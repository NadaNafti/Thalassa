<?php

namespace Back\CaisseBundle\Entity;

use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\ORM\Mapping as ORM;

/**
 * Caisse
 *
 * @ORM\Table("ost_c_caisse")
 * @ORM\Entity(repositoryClass="Back\CaisseBundle\Entity\Repository\CaisseRepository")
 */
class Caisse
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    /**
     * @var boolean
     *
     * @ORM\Column(name="active", type="boolean", nullable=true)
     */
    private $active;

    /**
     * @var string
     *
     * @ORM\Column(name="libelle", type="string", length=255)
     */
    private $libelle;
    
    /**
     * @Assert\NotBlank()
     * @ORM\ManyToOne(targetEntity="Back\AdministrationBundle\Entity\PointVente", inversedBy="caisses")
     */
    protected $pointVente;
    
    /**
     * @ORM\OneToOne(targetEntity="Back\UserBundle\Entity\User", inversedBy="caisse")
     */
    private $user;
    
    /**
     * @ORM\OneToMany(targetEntity="SessionCaisse", mappedBy="caisse")
     */
    protected $sessions;
    
    
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->sessions = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set libelle
     *
     * @param string $libelle
     * @return Caisse
     */
    public function setLibelle($libelle)
    {
        $this->libelle = $libelle;

        return $this;
    }

    /**
     * Get libelle
     *
     * @return string 
     */
    public function getLibelle()
    {
        return $this->libelle;
    }

    /**
     * Set pointVente
     *
     * @param \Back\AdministrationBundle\Entity\PointVente $pointVente
     * @return Caisse
     */
    public function setPointVente(\Back\AdministrationBundle\Entity\PointVente $pointVente = null)
    {
        $this->pointVente = $pointVente;

        return $this;
    }

    /**
     * Get pointVente
     *
     * @return \Back\AdministrationBundle\Entity\PointVente 
     */
    public function getPointVente()
    {
        return $this->pointVente;
    }

    /**
     * Add sessions
     *
     * @param \Back\CaisseBundle\Entity\SessionCaisse $sessions
     * @return Caisse
     */
    public function addSession(\Back\CaisseBundle\Entity\SessionCaisse $sessions)
    {
        $this->sessions[] = $sessions;

        return $this;
    }

    /**
     * Remove sessions
     *
     * @param \Back\CaisseBundle\Entity\SessionCaisse $sessions
     */
    public function removeSession(\Back\CaisseBundle\Entity\SessionCaisse $sessions)
    {
        $this->sessions->removeElement($sessions);
    }

    /**
     * Get sessions
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getSessions()
    {
        return $this->sessions;
    }
    
    

    /**
     * Set active
     *
     * @param boolean $active
     * @return Caisse
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get active
     *
     * @return boolean 
     */
    public function getActive()
    {
        return $this->active;
    }
}

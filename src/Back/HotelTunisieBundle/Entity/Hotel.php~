<?php

namespace Back\HotelTunisieBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Hotel
 *
 * @ORM\Table(name="ost_sht_hotels")
 * @Gedmo\SoftDeleteable(fieldName="deletedAt",timeAware=false)
 * @ORM\Entity(repositoryClass="Back\HotelTunisieBundle\Entity\HotelRepository")
 */
class Hotel
{

    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="libelle", type="string", length=255)
     */
    private $libelle;

    /**
     * @var string
     *
     * @ORM\Column(name="longitude", type="string", length=20)
     */
    private $longitude;

    /**
     * @var string
     *
     * @ORM\Column(name="latitude", type="string", length=20)
     */
    private $latitude;

    /**
     * @var string
     *
     * @ORM\Column(name="adresse", type="text")
     */
    private $adresse;

    /**
     * @var string
     *
     * @ORM\Column(name="descriptionCourte", type="text")
     */
    private $descriptionCourte;

    /**
     * @var string
     *
     * @ORM\Column(name="descriptionLongue", type="text")
     */
    private $descriptionLongue;

    /**
     * @ORM\ManyToOne(targetEntity="Chaine", fetch="EAGER")
     * @ORM\JoinColumn(name="chaine_id", referencedColumnName="id")
     * @ORM\OrderBy({"libelle" = "ASC"})
     * @Assert\NotBlank()
     */
    protected $chaine;

    /**
     * @ORM\ManyToOne(targetEntity="Back\CommercialBundle\Entity\Fournisseur", fetch="EAGER")
     * @ORM\JoinColumn(name="fournisseur_id", referencedColumnName="id")
     * @ORM\OrderBy({"libelle" = "ASC"})
     * @Assert\NotBlank()
     */
    protected $fournisseur;

    /**
     * @ORM\ManyToOne(targetEntity="Ville", fetch="EAGER")
     * @ORM\JoinColumn(name="ville_id", referencedColumnName="id")
     * @ORM\OrderBy({"libelle" = "ASC"})
     * @Assert\NotBlank()
     */
    protected $ville;

    /**
     * @ORM\ManyToOne(targetEntity="Categorie", fetch="EAGER")
     * @ORM\JoinColumn(name="categorie_id", referencedColumnName="id")
     * @ORM\OrderBy({"libelle" = "ASC"})
     * @Assert\NotBlank()
     */
    protected $categorie;

    /**
     * @ORM\ManyToMany(targetEntity="Tag")
     * @ORM\JoinTable(name="ost_sht_hotels_tags",
     *      joinColumns={@ORM\JoinColumn(name="id_hotel", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="id_tag", referencedColumnName="id")}
     * )
     */
    protected $tags;

    /**
     * @ORM\ManyToMany(targetEntity="chambre")
     * @ORM\JoinTable(name="ost_sht_hotels_chambre",
     *      joinColumns={@ORM\JoinColumn(name="id_hotel", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="id_chambre", referencedColumnName="id")}
     * )
     */
    protected $chambres;

    /**
     * @ORM\ManyToMany(targetEntity="Optionn")
     * @ORM\JoinTable(name="ost_sht_hotels_options",
     *      joinColumns={@ORM\JoinColumn(name="id_hotel", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="id_option", referencedColumnName="id")}
     * )
     */
    protected $options;

    /**
     * @ORM\ManyToMany(targetEntity="Localisation")
     * @ORM\JoinTable(name="ost_sht_hotels_localisations",
     *      joinColumns={@ORM\JoinColumn(name="id_hotel", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="id_localisation", referencedColumnName="id")}
     * )
     */
    protected $localisations;

    /**
     * @ORM\ManyToMany(targetEntity="Theme")
     * @ORM\JoinTable(name="ost_sht_hotels_themes",
     *      joinColumns={@ORM\JoinColumn(name="id_hotel", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="id_theme", referencedColumnName="id")}
     * )
     */
    protected $themes;

    /**
     * @ORM\ManyToMany(targetEntity="Arrangement")
     * @ORM\JoinTable(name="ost_sht_hotels_arrangements",
     *      joinColumns={@ORM\JoinColumn(name="id_hotel", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="id_arrangement", referencedColumnName="id")}
     * )
     */
    protected $arrangements;

    /**
     * @ORM\ManyToMany(targetEntity="Amenagement")
     * @ORM\JoinTable(name="ost_sht_hotels_amenagements",
     *      joinColumns={@ORM\JoinColumn(name="id_hotel", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="id_amenagement", referencedColumnName="id")}
     * )
     */
    protected $amenagements;

    /**
     * @ORM\ManyToMany(targetEntity="Vue")
     * @ORM\JoinTable(name="ost_sht_hotels_vues",
     *      joinColumns={@ORM\JoinColumn(name="id_hotel", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="id_vue", referencedColumnName="id")}
     * )
     */
    protected $vues;

    /**
     * @Gedmo\slug(fields={"libelle"})
     * @ORM\Column(name="slug", length=128, unique=true)
     */
    private $slug;

    /**
     * @Gedmo\Timestampable(on="create")
     * @ORM\Column( type="datetime")
     */
    private $created;

    /**
     * @Gedmo\Timestampable(on="update")
     * @ORM\Column( type="datetime")
     */
    private $updated;

    /**
     * @ORM\Column( name="deletedAt",type="datetime",nullable=true)
     */
    private $deletedAt;

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set libelle
     *
     * @param string $libelle
     * @return Hotel
     */
    public function setLibelle($libelle)
    {
        $this->libelle=$libelle;

        return $this;
    }

    /**
     * Get libelle
     *
     * @return string 
     */
    public function getLibelle()
    {
        return $this->libelle;
    }

    /**
     * Set longitude
     *
     * @param string $longitude
     * @return Hotel
     */
    public function setLongitude($longitude)
    {
        $this->longitude=$longitude;

        return $this;
    }

    /**
     * Get longitude
     *
     * @return string 
     */
    public function getLongitude()
    {
        return $this->longitude;
    }

    /**
     * Set latitude
     *
     * @param string $latitude
     * @return Hotel
     */
    public function setLatitude($latitude)
    {
        $this->latitude=$latitude;

        return $this;
    }

    /**
     * Get latitude
     *
     * @return string 
     */
    public function getLatitude()
    {
        return $this->latitude;
    }

    /**
     * Set adresse
     *
     * @param string $adresse
     * @return Hotel
     */
    public function setAdresse($adresse)
    {
        $this->adresse=$adresse;

        return $this;
    }

    /**
     * Get adresse
     *
     * @return string 
     */
    public function getAdresse()
    {
        return $this->adresse;
    }

    /**
     * Set descriptionCourte
     *
     * @param string $descriptionCourte
     * @return Hotel
     */
    public function setDescriptionCourte($descriptionCourte)
    {
        $this->descriptionCourte=$descriptionCourte;

        return $this;
    }

    /**
     * Get descriptionCourte
     *
     * @return string 
     */
    public function getDescriptionCourte()
    {
        return $this->descriptionCourte;
    }

    /**
     * Set descriptionLongue
     *
     * @param string $descriptionLongue
     * @return Hotel
     */
    public function setDescriptionLongue($descriptionLongue)
    {
        $this->descriptionLongue=$descriptionLongue;

        return $this;
    }

    /**
     * Get descriptionLongue
     *
     * @return string 
     */
    public function getDescriptionLongue()
    {
        return $this->descriptionLongue;
    }

}
